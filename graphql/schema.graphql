type Query {
  "Find a single Disease by the name attribute."
  FindDisease(name: String! @eq): Disease @find

  "Find a single Disease by the ID attribute."
  FindDiseaseById(id: ID! @eq): Disease @find

  "List multiple Diseases."
  GetAllDiseases(name: String): [Disease!]! @all
  diseasesNameSuggestions(name: String!): [Disease!]! @field(resolver: "App\\GraphQL\\Queries\\DiseasesNameSuggestions@resolve")

}

# Define custom directives (example)
directive @eq on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
directive @find on FIELD_DEFINITION
directive @all on FIELD_DEFINITION


type Disease {
    id: ID!
    name: String!
    description: String!
    symptoms: String!
    treatment: String!
}

# Define custom directives (example)
# directive @eq on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
# directive @find on FIELD_DEFINITION
# directive @all on FIELD_DEFINITION

########################## query , fragment , directive , variables, Aliases ,Argument  #################################
# query GetDisease($DiseaseName: String!, $isBrief: Boolean!) {
#   Brief: FindDisease(name: $DiseaseName) {
#     ...Brief @include(if: $isBrief)
#     ... on Disease { name}   # inline fragment
#   }
#   Details: FindDisease(name: $DiseaseName) {
#     treatment @skip(if: $isBrief)
#     symptoms @skip(if: $isBrief)
#   }
# }

# fragment Brief on Disease {
#   name
#   description
# }
#####################################################################
